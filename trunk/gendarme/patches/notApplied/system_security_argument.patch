Index: SecurityElement.cs
===================================================================
--- SecurityElement.cs	(revisión: 110357)
+++ SecurityElement.cs	(copia de trabajo)
@@ -175,7 +175,7 @@
 			}
 			set {
 				if (value == null)
-					throw new ArgumentNullException ("Tag");
+					throw new ArgumentNullException ("value");
 				if (!IsValidTag (value))
 					throw new ArgumentException (Locale.GetText ("Invalid XML string") + ": " + value);
 				tag = value;
Index: ChangeLog
===================================================================
--- ChangeLog	(revisión: 110358)
+++ ChangeLog	(copia de trabajo)
@@ -1,3 +1,9 @@
+2008-08-13  Néstor Salceda  <nestor.salceda@gmail.com>
+
+	* CodeAccessPermission.cs,
+	* SecurityElement.cs: Put the correct values in argument exceptions.
+	Found using Gendarme.
+
 2008-08-07  Sebastien Pouliot  <sebastien@ximian.com>
 
 	* SecurityState.cs: New. Silverlight 2.0 abstract type.
Index: CodeAccessPermission.cs
===================================================================
--- CodeAccessPermission.cs	(revisión: 110357)
+++ CodeAccessPermission.cs	(copia de trabajo)
@@ -282,12 +282,12 @@
 		internal static int CheckSecurityElement (SecurityElement se, string parameterName, int minimumVersion, int maximumVersion) 
 		{
 			if (se == null)
-				throw new ArgumentNullException (parameterName);
+				throw new ArgumentNullException ("parameterName");
 
 			// Tag is case-sensitive
 			if (se.Tag != "IPermission") {
 				string msg = String.Format (Locale.GetText ("Invalid tag {0}"), se.Tag);
-				throw new ArgumentException (msg, parameterName);
+				throw new ArgumentException (msg, "parameterName");
 			}
 
 			// Note: we do not care about the class attribute at 
@@ -312,7 +312,7 @@
 			if ((version < minimumVersion) || (version > maximumVersion)) {
 				string msg = Locale.GetText ("Unknown version '{0}', expected versions between ['{1}','{2}'].");
 				msg = String.Format (msg, version, minimumVersion, maximumVersion);
-				throw new ArgumentException (msg, parameterName);
+				throw new ArgumentException (msg, "parameterName");
 			}
 			return version;
 		}
